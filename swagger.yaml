swagger: '2.0'
info:
  version: 1.0.0
  title: ScreenBuddy API
  description: API documentation for ScreenBuddy backend endpoints.
host: localhost:5000
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json

paths:
  /register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      description: Registers a new user and sends a verification code to their email.
      parameters:
        - in: body
          name: body
          description: User registration data
          required: true
          schema:
            type: object
            required:
              - email
              - username
              - password
            properties:
              email:
                type: string
                example: "user@example.com"
              username:
                type: string
                example: "myuser"
              password:
                type: string
                example: "mypassword"
      responses:
        201:
          description: User registered successfully
          schema:
            type: object
            properties:
              message:
                type: string
              user:
                type: object
                properties:
                  id:
                    type: string
                  username:
                    type: string
                  email:
                    type: string
        400:
          description: Missing required fields
          schema:
            type: object
            properties:
              message:
                type: string
        409:
          description: User already exists
          schema:
            type: object
            properties:
              message:
                type: string
        500:
          description: Server error
          schema:
            type: object
            properties:
              message:
                type: string

  /verify-email:
    post:
      tags:
        - Authentication
      summary: Verify user email
      description: Verifies a user's email using a code sent to their email address.
      parameters:
        - in: body
          name: body
          description: Email and verification code
          required: true
          schema:
            type: object
            required:
              - email
              - code
            properties:
              email:
                type: string
                example: "user@example.com"
              code:
                type: string
                example: "123456"
      responses:
        200:
          description: Email verified
          schema:
            type: object
            properties:
              message:
                type: string
        400:
          description: Invalid or expired code
          schema:
            type: object
            properties:
              message:
                type: string
        404:
          description: User not found
          schema:
            type: object
            properties:
              message:
                type: string
        500:
          description: Server error
          schema:
            type: object
            properties:
              message:
                type: string

  /login:
    post:
      tags:
        - Authentication
      summary: Log in a user
      description: Authenticates a user and returns a JWT token.
      parameters:
        - in: body
          name: body
          description: User login credentials
          required: true
          schema:
            type: object
            required:
              - username
              - password
            properties:
              username:
                type: string
                example: "myuser"
              password:
                type: string
                example: "mypassword"
      responses:
        200:
          description: Login successful
          schema:
            type: object
            properties:
              message:
                type: string
              token:
                type: string
              user:
                type: object
                properties:
                  id:
                    type: string
                  email:
                    type: string
        400:
          description: Missing credentials
          schema:
            type: object
            properties:
              message:
                type: string
        401:
          description: Invalid credentials or email not verified
          schema:
            type: object
            properties:
              message:
                type: string
              user:
                type: object
                properties:
                  id:
                    type: string
                  email:
                    type: string
        500:
          description: Server error
          schema:
            type: object
            properties:
              message:
                type: string

  /profile/{id}:
    get:
      tags:
        - User
      summary: Get user profile
      description: Returns the profile information for a user. Requires authentication.
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: User ID
        - in: header
          name: Authorization
          required: true
          type: string
          description: Bearer token
      responses:
        201:
          description: User found
          schema:
            type: object
            properties:
              message:
                type: string
              user:
                type: object
                properties:
                  name:
                    type: string
                  created:
                    type: string
                    format: date-time
        500:
          description: Server error
          schema:
            type: object
            properties:
              message:
                type: string