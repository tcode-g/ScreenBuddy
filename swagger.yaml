swagger: '2.0'
info:
  version: 1.0.0
  title: ScreenBuddy API
  description: API documentation for ScreenBuddy backend endpoints.
host: cometcontacts4331.com:5000
basePath: /api
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json

paths:
  /register:
    post:
      tags:
        - Authentication
      summary: Register a new user
      description: Registers a new user and sends a verification code to their email.
      parameters:
        - in: body
          name: body
          description: User registration data
          required: true
          schema:
            type: object
            required:
              - email
              - username
              - password
            properties:
              email:
                type: string
                example: "user@example.com"
              username:
                type: string
                example: "myuser"
              password:
                type: string
                example: "mypassword"
      responses:
        201:
          description: User registered successfully
          schema:
            type: object
            properties:
              message:
                type: string
              user:
                type: object
                properties:
                  id:
                    type: string
                  username:
                    type: string
                  email:
                    type: string
        400:
          description: Missing required fields
          schema:
            type: object
            properties:
              message:
                type: string
        409:
          description: User already exists
          schema:
            type: object
            properties:
              message:
                type: string
        500:
          description: Server error
          schema:
            type: object
            properties:
              message:
                type: string

  /verify-email:
    post:
      tags:
        - Authentication
      summary: Verify user email
      description: Verifies a user's email using a code sent to their email address.
      parameters:
        - in: body
          name: body
          description: Email and verification code
          required: true
          schema:
            type: object
            required:
              - email
              - code
            properties:
              email:
                type: string
                example: "user@example.com"
              code:
                type: string
                example: "123456"
      responses:
        200:
          description: Email verified
          schema:
            type: object
            properties:
              message:
                type: string
        400:
          description: Invalid or expired code
          schema:
            type: object
            properties:
              message:
                type: string
        404:
          description: User not found
          schema:
            type: object
            properties:
              message:
                type: string
        500:
          description: Server error
          schema:
            type: object
            properties:
              message:
                type: string

  /login:
    post:
      tags:
        - Authentication
      summary: Log in a user
      description: Authenticates a user and returns a JWT token.
      parameters:
        - in: body
          name: body
          description: User login credentials
          required: true
          schema:
            type: object
            required:
              - username
              - password
            properties:
              username:
                type: string
                example: "myuser"
              password:
                type: string
                example: "mypassword"
      responses:
        200:
          description: Login successful
          schema:
            type: object
            properties:
              message:
                type: string
              token:
                type: string
              user:
                type: object
                properties:
                  id:
                    type: string
                  email:
                    type: string
        400:
          description: Missing credentials
          schema:
            type: object
            properties:
              message:
                type: string
        401:
          description: Invalid credentials or email not verified
          schema:
            type: object
            properties:
              message:
                type: string
              user:
                type: object
                properties:
                  id:
                    type: string
                  email:
                    type: string
        500:
          description: Server error
          schema:
            type: object
            properties:
              message:
                type: string

  /profile/{id}:
    get:
      tags:
        - User
      summary: Get user profile
      description: Returns the profile information for a user. Requires authentication.
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: User ID
        - in: header
          name: Authorization
          required: true
          type: string
          description: Bearer token
      responses:
        201:
          description: User found
          schema:
            type: object
            properties:
              message:
                type: string
              user:
                type: object
                properties:
                  name:
                    type: string
                  created:
                    type: string
                    format: date-time
        500:
          description: Server error
          schema:
            type: object
            properties:
              message:
                type: string
  
  /goals/create:
    post:
      tags:
        - Goal
      summary: Create a new goal
      description: Creates a new goal for the authenticated user.
      parameters:
        - in: header
          name: Authorization
          required: true
          type: string
          description: Bearer token
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - title
              - minutes
            properties:
              title:
                type: string
              minutes:
                type: integer
      responses:
        201:
          description: Goal created successfully
          schema:
            type: object
            properties:
              message:
                type: string
              goal:
                type: object
        400:
          description: User not found
          schema:
            type: object
            properties:
              message:
                type: string
        500:
          description: Server error
          schema:
            type: object
            properties:
              message:
                type: string

  /goals/status/{id}:
    get:
      tags:
        - Goal
      summary: Get status of a goal by id
      description: Returns the status of a goal for the authenticated user.
      parameters:
        - in: path
          name: id
          required: true
          type: string
          description: Goal id
        - in: header
          name: Authorization
          required: true
          type: string
          description: Bearer token
      responses:
        200:
          description: Goal status fetched successfully
          schema:
            type: object
            properties:
              message:
                type: string
              goal:
                type: object
        400:
          description: User or goal not found
          schema:
            type: object
            properties:
              message:
                type: string
        500:
          description: Server error
          schema:
            type: object
            properties:
              message:
                type: string

  /goals/all:
    get:
      tags:
        - Goal
      summary: Get all goals
      description: Returns all goals for the authenticated user.
      parameters:
        - in: header
          name: Authorization
          required: true
          type: string
          description: Bearer token
      responses:
        200:
          description: Goals fetched successfully
          schema:
            type: object
            properties:
              message:
                type: string
              goals:
                type: array
                items:
                  type: object
        400:
          description: User not found
          schema:
            type: object
            properties:
              message:
                type: string
        500:
          description: Server error
          schema:
            type: object
            properties:
              message:
                type: string

  /goals/active:
    get:
      tags:
        - Goal
      summary: Get active goal
      description: Returns the active goal for the authenticated user.
      parameters:
        - in: header
          name: Authorization
          required: true
          type: string
          description: Bearer token
      responses:
        200:
          description: Active goal fetched successfully
          schema:
            type: object
            properties:
              message:
                type: string
              goal:
                type: object
        400:
          description: User not found or no active goal
          schema:
            type: object
            properties:
              message:
                type: string
        500:
          description: Server error
          schema:
            type: object
            properties:
              message:
                type: string

  /goals/remove:
    post:
      tags:
        - Goal
      summary: Remove a goal
      description: Removes a goal for the authenticated user.
      parameters:
        - in: header
          name: Authorization
          required: true
          type: string
          description: Bearer token
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - goalId
            properties:
              goalId:
                type: string
      responses:
        200:
          description: Goal removed successfully
          schema:
            type: object
            properties:
              message:
                type: string
        400:
          description: User or goal not found
          schema:
            type: object
            properties:
              message:
                type: string
        500:
          description: Server error
          schema:
            type: object
            properties:
              message:
                type: string

  /goals/update:
    post:
      tags:
        - Goal
      summary: SB Update Goal Status
      description: Updates the active status of a goal.
      parameters:
        - in: header
          name: Authorization
          required: true
          type: string
          description: Bearer token
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - goalId
              - activeStatus
            properties:
              goalId:
                type: string
                example: 68848f3e18e0f7956c5664cb
              activeStatus:
                type: boolean
                example: true
      responses:
        200:
          description: Goal status updated successfully
          schema:
            type: object
            properties:
              message:
                type: string
  
  /buddy/buy:
    post:
      tags:
        - Buddy
      summary: Buy a buddy
      description: Buys a buddy for the authenticated user.
      parameters:
        - in: header
          name: Authorization
          required: true
          type: string
          description: Bearer token
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - buddyId
            properties:
              buddyId:
                type: string
      responses:
        200:
          description: Buddy bought successfully
          schema:
            type: object
            properties:
              message:
                type: string
              buddy:
                type: string
        400:
          description: Invalid user
          schema:
            type: object
            properties:
              message:
                type: string
        500:
          description: Server error
          schema:
            type: object
            properties:
              message:
                type: string

  /buddy/equip:
    post:
      tags:
        - Buddy
      summary: Equip a buddy
      description: Equips a buddy for the authenticated user.
      parameters:
        - in: header
          name: Authorization
          required: true
          type: string
          description: Bearer token
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - buddyId
            properties:
              buddyId:
                type: string
      responses:
        200:
          description: Buddy equipped successfully
          schema:
            type: object
            properties:
              message:
                type: string
              buddy:
                type: string
        400:
          description: User not found
          schema:
            type: object
            properties:
              message:
                type: string
        500:
          description: Server error
          schema:
            type: object
            properties:
              message:
                type: string

  /buddy/all:
    get:
      tags:
        - Buddy
      summary: Get all buddies
      description: Returns all buddies for the authenticated user.
      parameters:
        - in: header
          name: Authorization
          required: true
          type: string
          description: Bearer token
      responses:
        200:
          description: Buddies fetched successfully
          schema:
            type: object
            properties:
              message:
                type: string
              buddies:
                type: array
                items:
                  type: object
        400:
          description: User not found
          schema:
            type: object
            properties:
              message:
                type: string
        500:
          description: Server error
          schema:
            type: object
            properties:
              message:
                type: string


  /logs/add:
    post:
      tags:
        - Logs
      summary: SB Screen Off
      description: SB Screen Off event logging.
      parameters:
        - in: header
          name: Authorization
          required: true
          type: string
          description: Bearer token
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - event
            properties:
              event:
                type: string
                enum:
                  - screen_off
                  - screen_on
      responses:
        200:
          description: Screen off event logged successfully
          schema:
            type: object
            properties:
              message:
                type: string

  